const ytdl = require('ytdl-core');
const fs = require('fs');

const url = 'https://www.youtube.com/watch?v=EXAMPLE';

const stream = ytdl(url, {
    filter: 'audioonly', // Extraire uniquement l'audio
    quality: 'highestaudio', // Meilleure qualité possible
});

stream.pipe(fs.createWriteStream('audio.opus'))
    .on('finish', () => console.log('Téléchargement terminé en Opus natif.'));




https://github.com/discordjs/opus



const { createAudioPlayer, createAudioResource, joinVoiceChannel } = require('@discordjs/voice');

const connection = joinVoiceChannel({
    channelId: '1234567890',
    guildId: '0987654321',
    adapterCreator: message.guild.voiceAdapterCreator,
});

const player = createAudioPlayer();
const resource = createAudioResource('./audio.opus'); // Utilisation directe
player.play(resource);
connection.subscribe(player);



        /*
        const filePath = join(__dirname, '', 'test.mp3');
        const resource = createAudioResource(filePath);
         */*





import ffmpeg from 'fluent-ffmpeg';
import * as fs from "fs";

export async function createAudioResourceFromSong(song) {
    return new Promise((resolve, reject) => {
        ffmpeg(song.url)
            .audioCodec('libmp3lame')
            .format('mp3')
            .on('end', function () {
                // read the file data
                const fileData = fs.readFileSync('output.mp3');
                const resource = createAudioResource(fileData, {
                    inputType: 'opus',
                });
                resolve(resource);
            })
            .on('error', function (err) {
                console.error('Erreur ffmpeg :', err);
                reject(new Error('Impossible de télécharger la vidéo audio : ' + err));
            })
            .pipe(fs.createWriteStream('output.mp3'));
    });
}
